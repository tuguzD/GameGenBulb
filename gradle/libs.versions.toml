[ versions ]
# Gradle DSL versions
sdk-min = "26"
sdk-target = "33"
sdk-compile = "33"
namespace = "io.github.tuguzd.gamegenbulb"
test-runner = "androidx.test.runner.AndroidJUnitRunner"
test-args = "de.mannodermaus.junit5.AndroidJUnit5Builder"
compose-compiler = "1.4.7"
# Plugin versions
agp = "8.0.2"
ksp = "1.8.21-1.0.11"
kotlin = "1.8.21"
android-junit5 = "1.9.3.0"
# KotlinX versions
kotlinx-coroutines = "1.7.1"
# Android versions
core-ktx = "1.10.1"
core-splashscreen = "1.0.1"
activity = "1.7.2"
lifecycle = "2.6.1"
datastore = "1.0.0"
security = "1.0.0"
# Third-party versions
coil = "2.4.0"
hilt-google = "2.46.1"
hilt-androidx = "1.0.0"
mvi = "3.2.1"
datastore-crypto = "1.0.0-beta01"
objectbox = "3.6.0"
apollo-graphql = "3.8.2"
# Jetpack Compose versions
compose-bom = "2023.06.00"
accompanist = "0.30.1"
destinations = "1.9.42-beta"
# Testing versions
junit4 = "4.13.2"
junit4-ext = "1.1.5"
junit5 = "5.9.3"
espresso-core = "3.5.1"

[ libraries ]
# Kotlin libraries
coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
coroutines-debug = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-debug", version.ref = "kotlinx-coroutines" }
# Android libraries
core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "core-splashscreen" }
activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity" }
lifecycle-runtime = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycle-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
# DataStore libraries
datastore-prot = { group = "androidx.datastore", name = "datastore", version.ref = "datastore" }
datastore-prot-crypto = { group = "io.github.osipxd", name = "security-crypto-datastore", version.ref = "datastore-crypto" }
datastore-pref = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }
datastore-pref-crypto = { group = "io.github.osipxd", name = "security-crypto-datastore-preferences", version.ref = "datastore-crypto" }
security-crypto = { group = "androidx.security", name = "security-crypto", version.ref = "security" }

# Third-party libraries
coil = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }
apollo-runtime = { group = "com.apollographql.apollo3", name = "apollo-runtime", version.ref = "apollo-graphql" }
# Hilt libraries
hilt = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt-google" }
hilt-kapt = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt-google" }
hilt-navigation = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hilt-androidx" }
# MVIKotlin libraries
mvi = { group = "com.arkivanov.mvikotlin", name = "mvikotlin", version.ref = "mvi" }
mvi-main = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-main", version.ref = "mvi" }
mvi-logging = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-logging", version.ref = "mvi" }
mvi-coroutines = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-extensions-coroutines", version.ref = "mvi" }
# ObjectBox libraries
objectbox-gradle = { group = "io.objectbox", name = "objectbox-gradle-plugin", version.ref = "objectbox" }
objectbox-kotlin = { group = "io.objectbox", name = "objectbox-kotlin", version.ref = "objectbox" }
objectbox-android = { group = "io.objectbox", name = "objectbox-android", version.ref = "objectbox" }
objectbox-android-objectbrowser = { group = "io.objectbox", name = "objectbox-android-objectbrowser", version.ref = "objectbox" }

# Jetpack Compose libraries
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
ui = { group = "androidx.compose.ui", name = "ui" }
ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
material-icons = { group = "androidx.compose.material", name = "material-icons-extended" }
material3 = { group = "androidx.compose.material3", name = "material3" }
material3-window-size = { group = "androidx.compose.material3", name = "material3-window-size-class" }
# Jetpack Compose addon libraries
accompanist-placeholder = { group = "com.google.accompanist", name = "accompanist-placeholder-material", version.ref = "accompanist" }
destinations-core = { group = "io.github.raamcosta.compose-destinations", name = "core", version.ref = "destinations" }
destinations-ksp = { group = "io.github.raamcosta.compose-destinations", name = "ksp", version.ref = "destinations" }

# General testing libraries
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
# JUnit 4 libraries
junit4 = { group = "junit", name = "junit", version.ref = "junit4" }
junit4-android-ext = { group = "androidx.test.ext", name = "junit", version.ref = "junit4-ext" }
# JUnit 5 libraries
junit5-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit5" }
junit5-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit5" }
junit5-params = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junit5" }
junit5-vintage-engine = { group = "org.junit.vintage", name = "junit-vintage-engine", version.ref = "junit5" }

[ bundles ] # Groups of libraries
# Android bundles
core = [ "core-ktx", "core-splashscreen" ]
lifecycle = [ "lifecycle-runtime", "lifecycle-viewmodel" ]
# DataStore bundles
encr-shared-pref = [ "security-crypto" ]
encr-datastore-prot = [ "datastore-prot", "datastore-prot-crypto" ]
encr-datastore-pref = [ "datastore-pref", "datastore-pref-crypto" ]
# Jetpack Compose bundles
compose-impl = [ "ui", "ui-graphics", "ui-tooling-preview" ]
compose-debug = [ "ui-tooling", "ui-test-manifest" ]
material3 = [ "material3", "material3-window-size" ]
# Third-party bundles
accompanist = [ "accompanist-placeholder" ]
hilt = [ "hilt", "hilt-navigation" ]
mvi = [ "mvi", "mvi-main", "mvi-logging", "mvi-coroutines" ]
# General testing libraries
junit4-android = [ "junit4-android-ext", "ui-test-junit4" ]
junit5-core = [ "junit5-api", "junit5-params" ]
junit5-engine = [ "junit5-engine", "junit5-vintage-engine" ]
coroutines-test = [ "coroutines-test", "coroutines-debug" ]

[ plugins ] # Plugin definitions
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
android-junit5 = { id = "de.mannodermaus.android-junit5", version.ref = "android-junit5" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt-google" }
objectbox = { id = "io.objectbox", version.ref = "objectbox" }
apollo-graphql = { id = "com.apollographql.apollo3", version.ref = "apollo-graphql" }
